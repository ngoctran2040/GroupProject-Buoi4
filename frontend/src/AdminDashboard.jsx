import React, { useState, useEffect, useCallback } from "react";
import axios from "axios";
import "./AdminDashboard.css"; // CSS b·∫£ng qu·∫£n l√Ω

function AdminDashboard() {
  const [users, setUsers] = useState([]);
  const [message, setMessage] = useState("");
  const [error, setError] = useState("");

  const token = localStorage.getItem("token");

  // üß© 1Ô∏è‚É£ D√πng useCallback (gi·ªù ch·ªâ ph·ª• thu·ªôc v√†o token)
  const fetchUsers = useCallback(async () => {
    try {
      setError("");
      const res = await axios.get("http://localhost:3000/users", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setUsers(res.data);
    } catch (err) {
      console.error("‚ùå L·ªói khi t·∫£i danh s√°ch:", err);
      setError(err.response?.data?.message || "Kh√¥ng th·ªÉ t·∫£i danh s√°ch ng∆∞·ªùi d√πng");
    }
  }, [token]); // ‚úÖ Ch·ªâ ph·ª• thu·ªôc v√†o token (chu·∫©n nh·∫•t)

  // üß© 2Ô∏è‚É£ G·ªçi fetchUsers khi component render l·∫ßn ƒë·∫ßu
  useEffect(() => {
    fetchUsers();
  }, [fetchUsers]);

  // üß© 3Ô∏è‚É£ X·ª≠ l√Ω x√≥a user
  const handleDelete = async (userId, userName) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a user "${userName}"?`)) {
      try {
        setMessage("");
        setError("");
        const res = await axios.delete(
          `http://localhost:3000/users/${userId}`,
          {
            headers: { Authorization: `Bearer ${token}` },
          }
        );
        setMessage(res.data.message || "X√≥a th√†nh c√¥ng!");
        fetchUsers(); // ‚úÖ T·∫£i l·∫°i danh s√°ch
      } catch (err) {
        console.error("‚ùå L·ªói khi x√≥a:", err);
        setError(err.response?.data?.message || "L·ªói khi x√≥a ng∆∞·ªùi d√πng");
      }
    }
  };

  return (
    <div className="admin-container">
      <h2>Qu·∫£n l√Ω Ng∆∞·ªùi d√πng</h2>

      {message && <p className="admin-message success">{message}</p>}
      {error && <p className="admin-message error">{error}</p>}

      {users.length === 0 ? (
        <p className="no-users">Kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o.</p>
      ) : (
        <table className="users-table">
          <thead>
            <tr>
              <th>T√™n</th>
              <th>Email</th>
              <th>Role</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user._id}>
                <td>{user.name}</td>
                <td>{user.email}</td>
                <td>
                  <span className={`role-badge role-${user.role}`}>
                    {user.role}
                  </span>
                </td>
                <td>
                  <button
                    className="delete-btn"
                    onClick={() => handleDelete(user._id, user.name)}
                  >
                    X√≥a
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}

export default AdminDashboard;
